on:
  pull_request:
    types:
      - labeled
name: Rebase
jobs:
  rebase:
    name: Rebase
    if: contains(github.event.pull_request.labels.*.name, 'rebase and merge')
    runs-on: ubuntu-latest
    steps:
      - name: Remove "rebase and merge" label
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          label: rebase and merge
          type: remove
      - name: Remove "rebase conflict" label
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          label: rebase conflict
          type: remove
      - name: Checkout the latest code
        uses: actions/checkout@v2.3.4
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}
      - name: Rebase
        env:
          BASE_REF: ${{ github.base_ref }}
          HEAD_REF: ${{ github.head_ref }}
        run: |
          source .github/auto-pr/utils.sh
          git fetch origin $BASE_REF $HEAD_REF
          git checkout $HEAD_REF
          git branch old
          git rebase origin/$BASE_REF \
              && echo 'RESULT_LABEL=merge me'        >> $GITHUB_ENV \
              || echo 'RESULT_LABEL=rebase conflict' >> $GITHUB_ENV
          if [ ! -z "$(git diff HEAD old)" ] ; then
            git push origin --force-with-lease $HEAD_REF
          fi
      - name: Add rebase result label
        uses: buildsville/add-remove-label@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          label: ${{ env.RESULT_LABEL }}
          type: add
