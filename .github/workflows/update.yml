name: "Check for updates"
on:
  workflow_dispatch:
  schedule:
    - cron: "57 7 * * *"
jobs:
  list-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
      - name: Install nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-20.09
      - name: Setup cachix
        uses: cachix/cachix-action@v8
        with:
          name: jeremiehuchet
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      - name: Cache build dependencies
        run: |
          nix-shell .github/update/shell.nix --run true
          nix-store -qR --include-outputs $(nix-instantiate .github/update/shell.nix) | cachix push jeremiehuchet
      - id: set-matrix
        name: Find packages
        run: |
          MATRIX=$(mktemp --tmpdir matrix-XXX.json)
          nix-shell .github/update/shell.nix --run "generate_matrix | jq -c > $MATRIX"
          jq . "$MATRIX"
          echo "::set-output name=matrix::{ \"include\": $(cat $MATRIX) }"
  check-updates:
    needs: list-packages
    strategy:
      matrix: "${{fromJson(needs.list-packages.outputs.matrix)}}"
      fail-fast: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    name: ${{matrix.pkgname}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_DEPLOY_KEY }}
      - name: Install nix
        uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-20.09
      - name: Setup cachix
        uses: cachix/cachix-action@v8
        with:
          name: jeremiehuchet
      - name: github update check
        if: matrix.github_src
        run: nix-shell .github/update/shell.nix --run "./.github/update/update-github-package.sh ${{ matrix.pkgdir }}"
      - name: github update check
        if: matrix.github_rel_assets
        run: nix-shell .github/update/shell.nix --run "./.github/update/update-github-release-assets.sh ${{ matrix.pkgdir }}"
      - name: node2nix update check
        if: matrix.node_src
        run: nix-shell .github/update/shell.nix --run "./.github/update/update-node2nix-package.sh ${{ matrix.pkgdir }}"
      - name: vgo2nix post update process
        if: matrix.vgo2nix
        run: nix-shell .github/update/shell.nix --run "./.github/update/post-update-vgo2nix.sh ${{ matrix.pkgdir }}"
      - name: open pull request
        run: nix-shell .github/update/shell.nix --run "./.github/update/submit-pull-request.sh ${{ matrix.pkgdir }}"
