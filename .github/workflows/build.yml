name: "Build and populate cache"
on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron:  '27 6 * * *'
env:
  NIXPKGS_ALLOW_UNFREE: 1
jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        # Set this to notify the global nur package registry that changes are
        # available.
        #
        # The repo name as used in
        # https://github.com/nix-community/NUR/blob/master/repos.json
        #nurRepo:
        #  - <YOUR_REPO_NAME>
        # Set this to cache your build results in cachix for faster builds
        # in CI and for everyone who uses your cache.
        #
        # Format: Your cachix cache host name without the ".cachix.org" suffix.
        # Example: mycache (for mycache.cachix.org)
        #
        # For this to work, you also need to set the CACHIX_SIGNING_KEY or
        # CACHIX_AUTH_TOKEN secret in your repository secrets settings in
        # Github found at
        # https://github.com/<your_githubname>/nur-packages/settings/secrets
        cachixName:
          - jeremiehuchet
        nixPath:
          - nixpkgs=channel:nixos-25.05
          #- nixpkgs=channel:nixos-unstable
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: Install nix
      uses: cachix/install-nix-action@9280e7aca88deada44c930f1e2c78e21c3ae3edd # v31
      with:
        nix_path: "${{ matrix.nixPath }}"
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Setup cachix
      uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
      # Don't replace <YOUR_CACHIX_NAME> here!
      if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
      with:
        name: ${{ matrix.cachixName }}
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    #- name: Check evaluation
    #  run: |
    #    nix-env -f . -qa \* --meta --xml \
    #      --allowed-uris https://static.rust-lang.org \
    #      --option restrict-eval true \
    #      --option allow-import-from-derivation true \
    #      --drv-path --show-trace \
    #      -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
    #      -I $PWD
    - name: Build nix packages
      run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
